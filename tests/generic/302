#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 302
#
# Test fragmentation after a lot of random CoW:
# - Create two reflinked files.
# - Directio write to random offsets to scatter CoW reservations.
# - Check the number of extents.
#
. ./common/preamble
_begin_fstest auto quick clone fiemap

# Import common functions.
. ./common/filter
. ./common/reflink

_require_scratch_reflink
_require_cp_reflink
_require_xfs_io_command "fiemap"
_require_odirect
# Compression on btrfs creates a lot of extents
_require_no_compress

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

blksz=65536
nr=128
filesize=$((blksz * nr))
bufnr=16
bufsize=$((blksz * bufnr))

_require_fs_space $SCRATCH_MNT $((filesize / 1024 * 3 * 5 / 4))
real_blksz=$(_get_block_size $testdir)
internal_blks=$((filesize / real_blksz))

echo "Create the original files"
$XFS_IO_PROG -f -c "pwrite -S 0x61 -b $bufsize 0 $((filesize + 1))" $testdir/file1 >> $seqres.full
_cp_reflink $testdir/file1 $testdir/file2 >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch
md5sum $testdir/file2 | _filter_scratch

echo "CoW and unmount"
for i in `seq 1 8`; do
	$XFS_IO_PROG -d -f -c "pwrite -R -S 0x63 -b $real_blksz 0 $filesize" $testdir/file2 >> $seqres.full
done
_scratch_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch

echo "Check extent counts"
old_extents=$(_count_extents $testdir/file1)
new_extents=$(_count_extents $testdir/file2)

echo "old extents: $old_extents" >> $seqres.full
echo "new extents: $new_extents" >> $seqres.full
echo "maximum extents: $internal_blks" >> $seqres.full
test $new_extents -le $internal_blks || echo "file2 badly fragmented"

# success, all done
status=0
exit
